name: CleanUp

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/upload-artifact@v3
      with:
        name: todoapp-iac
        path: deploy/terraform

  stg:
    environment: 
      name: stg
    runs-on: ubuntu-latest
    needs: build

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: todoapp-iac
        path: ./terraform

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: terraform init api
      run: |
        cd ./terraform/todo-api
        terraform init -backend-config="key=todoapp.webapi.stg.tfstate"

    - name: terraform plan api
      run: |
        cd ./terraform/todo-api
        terraform plan -destroy -var="dbPassword=${{ secrets.DB_PASSWORD}}" -var="env=stg"

    - name: terraform destroy api
      run: |
        cd ./terraform/todo-api
        terraform destroy -var="dbPassword=${{ secrets.DB_PASSWORD}}" -var="env=stg" -auto-approve

    - name: terraform init webapp
      run: |
        cd ./terraform/todo-webapp
        terraform init -backend-config="key=todoapp.webapp.stg.tfstate"

    - name: terraform plan webapp
      run: |
        cd ./terraform/todo-webapp
        terraform plan -destroy -var="env=stg"

    - name: terraform destroy webapp
      run: |
        cd ./terraform/todo-webapp
        terraform destroy  -var="env=stg" -auto-approve

  prod:
    environment: 
      name: prod
    runs-on: ubuntu-latest
    needs: stg

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: todoapp-iac
        path: ./terraform

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: terraform init api
      run: |
        cd ./terraform/todo-api
        terraform init -backend-config="key=todoapp.webapi.prod.tfstate"

    - name: terraform plan api
      run: |
        cd ./terraform/todo-api
        terraform plan -destroy -var="dbPassword=${{ secrets.DB_PASSWORD}}" -var="env=prod"

    - name: terraform destroy api
      run: |
        cd ./terraform/todo-api
        terraform destroy -var="dbPassword=${{ secrets.DB_PASSWORD}}" -var="env=prod" -auto-approve

    - name: terraform init webapp
      run: |
        cd ./terraform/todo-webapp
        terraform init -backend-config="key=todoapp.webapp.prod.tfstate"

    - name: terraform plan webapp
      run: |
        cd ./terraform/todo-webapp
        terraform plan -destroy -var="env=prod"

    - name: terraform destroy webapp
      run: |
        cd ./terraform/todo-webapp
        terraform destroy -var="env=prod" -auto-approve